import pygame

# creates cell class
class Cell:

    # creates cell objects and appends them to the board list
    def __init__(self, value=0, row=0, col=0, screen=None, coords=0, coordx=0, coordy=0):
        self.value = value
        self.row = row
        self.col = col
        self.screen = screen
        self.coords = coords
        self.coordx = coordx
        self.coordy = coordy

    # sets all values generated by the sudoku generator in black
    def set_cell_value(self, value):
        self.value = value
        if self.value != 0:
            smaller_font = pygame.font.Font('Rajdhani-Bold.ttf', 45)
            num = smaller_font.render(f'{self.value}', True, (0, 0, 0))
            self.screen.blit(num, (self.coordx + 28, self.coordy + 10))
        else:
            pygame.draw.rect(self.screen, (255, 255, 255), [self.coordx + 3, self.coordy + 3, 71, 71])

    # sets the sketched value and uses a lighter color to depict it
    # also draws white square if value is 0 to delete previous value
    def set_sketched_value(self, value):
        self.value = value
        if self.value != 0:
            smaller_font = pygame.font.Font('Rajdhani-Bold.ttf', 45)
            num = smaller_font.render(f'{self.value}', True, (128, 128, 128))
            self.screen.blit(num, (self.coordx + 28, self.coordy + 10))
        else:
            pygame.draw.rect(self.screen, (255, 255, 255), [self.coordx + 3, self.coordy + 3, 71, 71])

    # draws the red box around the selected cell
    def draw(self):
        pygame.draw.rect(self.screen, (252, 3, 3), [self.coordx, self.coordy, 76, 76], 2)
